const base = require("./i18n/en.json");
const fs = require("fs");
const path = require("path");

const types = [
  "// dont edit this as this is autogenerated",
  "// its generated from translation-types.js"
];
const allKeys = Object.keys(base);

types.push(`export type Keys = ${allKeys.map(k => `'${k}'`).join(" | ")};`);

types.push(`export type GetTranslationTextType<T> = `);
Object.keys(base).map(key => {
  const message = base[key];
  const occurrences = message.match(/{{[a-z]+}}/g);
  const count = occurrences ? occurrences.length : 0;
  if (count === 0) {
    types.push(`T extends "${key}" ? never :`);
  } else {
    // remove {{ }}
    const varNames = occurrences
      .map(v => v.slice(2, -2))
      .map(n => `${n}: string`)
      .join(",");

    types.push(`T extends "${key}" ? { ${varNames} } :`);
  }
});
types.push(`never;`);

const srcPath = path.resolve(__dirname, "src", "typings", "translation.ts");
fs.writeFileSync(srcPath, types.join("\n"));
